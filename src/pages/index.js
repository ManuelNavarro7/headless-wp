import Head from "next/head";
import Image from "next/image";
import { Inter } from "next/font/google";
// import styles from "@/styles/Home.module.css";

import parse from "html-react-parser";
const inter = Inter({ subsets: ["latin"] });

export default function Home({ page }) {
  const newArray = parse(page.content)
    .filter((item) => typeof item === "object") // Filter out non-object elements
    .map((item) => ({
      type: item.type,
      text: item.props.children,
    }));

  // console.log(newArray);

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <h1>{page.title}</h1>
        {/* <h2>{h2}</h2> */}
        <h2>{newArray[0].text}</h2>
        <Image
          src="http://project7m.com/wp-content/uploads/2023/05/ImgTestPrompt.jpeg"
          alt="Test"
          width="300"
          height="300"
        ></Image>
        <p>{newArray[1].text}</p>
        <p>{newArray[2].text}</p>
      </main>
    </>
  );
}

export async function getStaticProps() {
  const response = await fetch("https://project7m.com/graphql", {
    // Replace with your GraphQL API endpoint
    method: "POST",
    headers: {
      "Content-Type": "application/json",
    },
    body: JSON.stringify({
      query: `
        query {
          pageBy(uri: "https://project7m.com/ai-unveiled-illuminating-the-realm-of-intelligent-machines/") {
            title
            content
            featuredImage {
              node {
                mediaItemUrl
                altText
              }
            }
            # Add any additional fields you want to retrieve
          }
        }
      `,
    }),
  });

  const { data } = await response.json(); // Access the 'data' property from the response

  return {
    props: {
      page: data.pageBy, // Pass the page data as props
    },
  };
}
